{"version":3,"sources":["components/Tasks/TasksFilter.js","components/UI/Card.js","components/Tasks/TaskDate.js","components/Tasks/TaskItem.js","components/Tasks/TasksList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Tasks/TasksChart.js","components/Tasks/Tasks.js","components/NewTask/TaskForm.js","components/NewTask/NewTask.js","App.js","index.js"],"names":["TasksFilter","props","className","value","selected","onChange","event","filterValue","target","onChangeFilter","Card","classes","children","TaskDate","month","date","toLocaleString","day","year","getFullYear","TaskItem","startDate","endDate","name","description","toDo","status","TasksList","items","length","map","task","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","TasksChart","chartDataPoints","tasks","getMonth","Tasks","useState","filteredYear","setFilteredYear","filteredTasks","filter","toString","selectedYear","console","log","TaskForm","enteredTaskName","setEnteredTaskName","enteredTaskDescription","setEnteredTaskDescription","enteredToDo","setEnteredToDo","selectedStatus","setEnteredStatus","enteredStartDate","setEnteredStartDate","enteredEndDate","setEnteredEndDate","onSubmit","preventDefault","taskData","Date","onSaveTaskData","type","disabled","min","NewTask","enteredTaskData","random","onAddTask","DUMMY_TASKS","App","setTasks","prevTasks","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.efac7c2e.chunk.js","sourcesContent":["import './TasksFilter.css';\r\n\r\nconst TasksFilter = (props) => {\r\n  const dropDownChangeHandler = (event) => {\r\n    const filterValue = event.target.value;\r\n    props.onChangeFilter(filterValue);\r\n  };\r\n\r\n  return (\r\n    <div className='tasks-filter'>\r\n      <div className='tasks-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropDownChangeHandler} >\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksFilter;","import './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes= 'card ' + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;","import Card from '../UI/Card';\r\n\r\nimport './TaskDate.css';\r\n\r\nconst TaskDate = (props) => {\r\n  const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n  const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <Card className='task-date'>\r\n      <div className='task-date__month'>{month}</div>\r\n      <div className='task-date__year'>{day}</div>\r\n      <div className='task-date__day'>{year}</div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskDate;","import Card from '../UI/Card';\r\nimport TaskDate from './TaskDate';\r\n\r\nimport './TaskItem.css';\r\n\r\nconst TaskItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className='task-item'>\r\n        <TaskDate date={props.startDate} />\r\n        <TaskDate date={props.endDate} />\r\n        <div className='task-item__description'>\r\n          <h2>{props.name}</h2>\r\n          <h3>{props.description}</h3>\r\n          <p>{props.toDo}</p>\r\n          {props.status === 'ONGOING' && <div className='task-item__status__ongoing'>{props.status}</div>}\r\n          {props.status === 'ON HOLD' && <div className='task-item__status__onhold'>{props.status}</div>}\r\n          {props.status === 'DELAY' && <div className='task-item__status__delay'>{props.status}</div>}\r\n          {props.status === 'DONE' && <div className='task-item__status__done'>{props.status}</div>}\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import TaskItem from './TaskItem';\r\nimport './TasksList.css';\r\n\r\nconst TasksList = props => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"tasks-list__fallback\">No Tasks Found</h2>\r\n}\r\n  return <ul className=\"tasks-list\">\r\n    {props.items.map((task) => (\r\n    <TaskItem \r\n      key={task.id}\r\n      name={task.name}\r\n      description={task.description}\r\n      toDo={task.toDo} \r\n      status={task.status} \r\n      startDate={task.startDate}\r\n      endDate={task.endDate}\r\n    />\r\n))}\r\n  </ul>\r\n};\r\n\r\nexport default TasksList;","import './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  };\r\n\r\n  return <div className='chart-bar'>\r\n    <div className='chart-bar__inner'>\r\n      <div className='chart-bar__fill' style={{height: barFillHeight}} ></div>\r\n    </div>\r\n    <div className='chart-bar__label'>{props.label}</div>\r\n  </div>\r\n};\r\n\r\nexport default ChartBar;","import ChartBar from './ChartBar';\r\nimport './Chart.css'\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return <div className='chart'>\r\n    {props.dataPoints.map(dataPoint => \r\n      <ChartBar \r\n        key={dataPoint.label} \r\n        value={dataPoint.value} \r\n        maxValue={totalMaximum} \r\n        label={dataPoint.label} \r\n        />\r\n        )}\r\n  </div>\r\n};\r\n\r\nexport default Chart;","import Chart from \"../Chart/Chart\";\r\n\r\nconst TasksChart = props => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 }\r\n  ];\r\n\r\n\r\n    for (const task of props.tasks) {\r\n      const taskMonth = task.startDate.getMonth();\r\n      chartDataPoints[taskMonth].value += 1;\r\n    }\r\n\r\n\r\n  return <Chart dataPoints={chartDataPoints} />\r\n};\r\n\r\nexport default TasksChart;","import { useState } from 'react';\r\n\r\nimport TasksFilter from './TasksFilter';\r\nimport TasksList from './TasksList';\r\nimport TasksChart from './TasksChart';\r\nimport Card from '../UI/Card';\r\nimport './Tasks.css';\r\n\r\nconst Tasks = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n    console.log(filteredYear);\r\n  };\r\n\r\n  const filteredTasks = props.items.filter(task => {\r\n    return task.startDate.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className='tasks'>\r\n        <TasksFilter \r\n          selected={filteredYear} \r\n          onChangeFilter={filterChangeHandler} \r\n          />\r\n        <TasksChart tasks={filteredTasks} />\r\n        <TasksList items={filteredTasks} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;","import { useState } from 'react';\r\nimport './TaskForm.css';\r\n\r\nconst TaskForm = (props) => {\r\n  const [enteredTaskName, setEnteredTaskName] = useState('');\r\n  const [enteredTaskDescription, setEnteredTaskDescription] = useState('');\r\n  const [enteredToDo, setEnteredToDo] = useState('');\r\n  const [selectedStatus, setEnteredStatus] = useState('SELECT OPTION');\r\n  const [enteredStartDate, setEnteredStartDate] = useState('');\r\n  const [enteredEndDate, setEnteredEndDate] = useState('');\r\n\r\n  const taskNameChangeHandler = (event) => {\r\n    setEnteredTaskName(event.target.value);\r\n  };\r\n\r\n  const taskDescriptionChangeHandler = (event) => {\r\n    setEnteredTaskDescription(event.target.value);\r\n  };\r\n\r\n  const toDoChangeHandler = (event) => {\r\n    setEnteredToDo(event.target.value);\r\n  };\r\n\r\n  const statusChangeHandler = (event) => {\r\n    setEnteredStatus(event.target.value);\r\n  };\r\n\r\n  const startDateChangeHandler = (event) => {\r\n    setEnteredStartDate(event.target.value);\r\n  };\r\n\r\n  const endDateChangeHandler = (event) => {\r\n    setEnteredEndDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const taskData = {\r\n      name: enteredTaskName,\r\n      description: enteredTaskDescription,\r\n      toDo: enteredToDo,\r\n      status: selectedStatus,\r\n      startDate: new Date(enteredStartDate),\r\n      endDate: new Date(enteredEndDate)\r\n    }\r\n\r\n    props.onSaveTaskData(taskData);\r\n    setEnteredTaskName('');\r\n    setEnteredTaskDescription('');\r\n    setEnteredToDo('');\r\n    setEnteredStatus('SELECT OPTION');\r\n    setEnteredStartDate('');\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-task__controls'>\r\n      <div className='new-task__control'>\r\n          <label>Project</label>\r\n          <input type='text' value={enteredTaskName} onChange={taskNameChangeHandler} />\r\n        </div>\r\n        <div className='new-task__control'>\r\n          <label>Task Description</label>\r\n          <input type='text' value={enteredTaskDescription} onChange={taskDescriptionChangeHandler} />\r\n        </div>\r\n        <div className='new-task__control'>\r\n          <label>Action</label>\r\n          <input type='text' value={enteredToDo} onChange={toDoChangeHandler} />\r\n        </div>\r\n        <div className='new-task__control'>\r\n          <label>Status</label>\r\n          <select value={selectedStatus} onChange={statusChangeHandler}>\r\n            <option value='SELECT OPTION' disabled>SELECT OPTION</option>\r\n            <option value='ONGOING'>ONGOING</option>\r\n            <option value='ON HOLD'>ONHOLD</option>\r\n            <option value='DELAY'>DELAY</option>\r\n            <option value='DONE'>DONE</option>\r\n          </select>\r\n          {/* <input type='text' value={enteredStatus} onChange={statusChangeHandler} /> */}\r\n        </div>\r\n        <div className='new-task__control'>\r\n          <label>Submission Date</label>\r\n          <input type='date' value={enteredStartDate} min='2019-01-01' max='2022-12-31' onChange={startDateChangeHandler}/>\r\n        </div>\r\n        <div className='new-task__control'>\r\n          <label>Deadline Date</label>\r\n          <input type='date' value={enteredEndDate} min={enteredStartDate} max='2022-12-31' onChange={endDateChangeHandler}/>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button type='submit'>Add Task</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;","import './NewTask.css';\r\nimport TaskForm from './TaskForm';\r\n\r\nconst NewTask = (props) => {\r\n  const saveTaskDataHandler = (enteredTaskData) => {\r\n    const taskData = {\r\n      ...enteredTaskData,\r\n      id: Math.random().toString()\r\n    };\r\n    props.onAddTask(taskData);\r\n  };\r\n\r\n  return (\r\n    <div className='new-task'>\r\n      <TaskForm onSaveTaskData={saveTaskDataHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTask;","import { useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport Card from './components/UI/Card';\n\nimport './App.css';\n\nconst DUMMY_TASKS = [\n  {\n    id: 'e1',\n    name: 'Project Apple',\n    description: 'Costs',\n    toDo: 'To calculate vendors expenses for last month',\n    status: 'ONGOING',\n    startDate: new Date(2021, 4, 14),\n    endDate: new Date(2021, 4, 20),\n  },\n  {\n    id: 'e2',\n    name: 'Project Banana',\n    description: 'Sales',\n    toDo: 'To realise customers\\' preferences ',\n    status: 'ONGOING',\n    startDate: new Date(2021, 6, 14),\n    endDate: new Date(2021, 6, 20),\n  },\n  {\n    id: 'e3',\n    name: 'Project Pear',\n    description: 'HR',\n    toDo: 'To estimate resources',\n    status: 'ON HOLD',\n    startDate: new Date(2021, 7, 14),\n    endDate: new Date(2021, 7, 20),\n  }\n];\n\nconst App = () => {\n  const [tasks, setTasks] = useState(DUMMY_TASKS);\n\n  const addTaskHandler = task => {\n    setTasks((prevTasks) => {\n      return [task, ...prevTasks];\n    });\n    console.log(task);\n  };\n\n  return (\n    <div>\n      <Card className='app'>\n        <h1>Tasks Tracker</h1>\n        <NewTask onAddTask={addTaskHandler} />\n        <Tasks items={tasks}/>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}